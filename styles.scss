@import "mixins";

// colors

$background-color: #FDF8F0;
$deep-orange: #FEB018;


// fonts 

@include font-face("Peignot", "../fonts/Peignot-Bold", null, null, "otf");
@include font-face("Andale", "../fonts/Andale-Mono", null, null, "ttf");
@include font-face("SabonBI", "../fonts/SabonLT-BoldItalic", null, null, "otf");
@include font-face("Scala", "../fonts/ScalaSans-Regular", null, null, "otf");

// body font size
$browser-context: 16;

// function to convert px to em
@function em($pixels, $context: $browser-context) {
    @return #{$pixels/$context}em
}

html {
    line-height: 1.2;
    font-size: em(16);
}

h3 {
	font-family: "SabonBI";
	font-size: em(24);
	line-height: 24px;
}

h3.label {
	font-family: "Peignot";
	font-size: em(16);
	line-height: 24px;
	margin: 24px 0;
}

p {
	font-family: "Scala";
	font-size: em(16);
	line-height: 1.5;
}

p.mono {
	font-family: "Andale";
	letter-spacing: 2px;
}

a {
	text-decoration: none;
	color: black;
}

.ta-right {
	text-align: right;
}


// sections

body {
	margin: 0px;
	background-color: $background-color;
}

.newSection {
	margin-top: 3em;
}


// components

.btn {
	width: 100%;
	border-radius: 5px;

	> p {
		margin: 0px;
    	padding: 9px 10px;
    	display: inline-block;
	}

	> i {
		border: solid $background-color;
		border-width: 0 2px 2px 0;
		border-radius: 1px;
		display: inline-block;
		padding: 4px;
		display: inline-block;
		float: right;
		margin: 15px;
	}
}

.btn-orange {
	background-color: $deep-orange;
}

i.right {
	transform: rotate(-45deg);
	-webkit-transform: rotate(-45deg);
}


// grid layout

$column-count: 12;
$min-margin: 24px;

$sm-column-width: 20px;
$sm-gutter-width: 8px;

$column-width: 84px;
$gutter-width: 16px;
$grid-width: ( ( $column-count * $column-width ) + ( ( $column-count - 1 ) * $gutter-width ) ) ;

$desktop-breakpoint: ( $grid-width + ( $min-margin * 2 ) );

@mixin desktop {
  @media (min-width: #{$desktop-breakpoint}) {
    @content;
  }
}

@mixin mobile {
  @media (max-width: ( #{$desktop-breakpoint} - 1 )) {
    @content;
  }
}

// mobile-first as base styles

.gridded {
	position: relative;
	display: flex;
	flex-direction: column;
	max-width: ( ( $column-count * $sm-column-width ) + ( ( $column-count - 1 ) * $sm-gutter-width ) );
	margin: 0 auto;
}

.row {
	position: relative;
	width: 100%;
}

[class^="col-"] {
	float: left;
	margin-right: $gutter-width;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;

	&:last-child {
		margin-right: 0%;
	}

	> img {
		width: 100%;
	}
}

[class^="sm-col-"] {
	margin-right: $sm-gutter-width;
	&:last-child {
		margin-right: 0%;
	}
}

@include mobile {
	.sm-col-0 {
		display: none;
	}
}

// for-loop for setting widths of columns
// --
// example equation:
// .col-1 { width: ( $column-width * 1 ) + ( $gutter-width * 0 ); }
// --
// example output:
// .col-1 { width: 80px; }

@for $i from 1 through $column-count {
	.sm-col-#{$i} {
		width: ( $sm-column-width * $i ) + ( $sm-gutter-width * ( $i - 1 ) );
	}
}

// desktop adjustments

@include desktop {
	.gridded {
		max-width: ( ( $column-count * $column-width ) + ( ( $column-count - 1 ) * $gutter-width ) );
	}

	[class^="col-"] {
		margin-right: $gutter-width;
	}

	col-0 {
		display: none;
	}

	@for $i from 1 through $column-count {
		.col-#{$i} {
			width: ( $column-width * $i ) + ( $gutter-width * ( $i - 1 ) );
		}
	}
}

